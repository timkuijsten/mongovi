.\" Copyright (c) 2016 Tim Kuijsten
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: November 15 2016 $
.Dt MONGOVI 1
.Os
.Sh NAME
.Nm mongovi
.Nd command line interface for MongoDB
.Sh SYNOPSIS
.Nm
.Op Fl psi
.Op Ar path
.Sh DESCRIPTION
.Nm
is a cli for MongoDB that uses
.Xr editline 3
for line editing and key bindings.
.Bl -tag -width Ds
.It Fl p
Print output in a human readable format.
This is the default when stdout is connected to a terminal.
.It Fl s
Print each JSON document on a single line in canonical MongoDB Extended JSON
format.
This is the default when stdout is not connected to a terminal.
.It Fl i
Import mode.
Insert every document read from stdin.
Expects exactly one document per line.
Can only be used non-interactively.
.It Ar path
Open a specific database and collection.
A
.Ar path
is a
.Qq /
delimited list of a database and collection name.
.El
.Pp
The default key bindings are Emacs-like.
.Xr vi 1 Ns -like
key bindings can be enabled by putting
.Qq bind -v
into your
.Xr editrc 5
file.
.Pp
By default
.Nm
will connect to mongodb://localhost:27017.
It is possible to override this connection string using a file called
.Qq .mongovi
in your home directory.
This file, if it exists, should contain exactly one line, which is a mongodb
connection string.
This string might contain a username and password.
.Sh BUILTIN COMMANDS
The following commands are supported:
.Bl -tag -width Ds
.It Ic find Op Ar selector
List all databases or all documents in the currently selected path.
Documents are output in MongoDB Extended JSON format.
.It Ic count Op Ar selector
Count all documents in the currently selected collection.
.It Ic remove Ar selector
Remove all documents in the currently selected collection that match the
selector.
.It Ic update Ar selector Ar doc
Update all documents that match the selector using the provided update document.
.It Ic upsert Ar selector Ar doc
Update or insert a document that matches the selector using the provided
document.
.It Ic insert Ar doc
Insert
.Ar doc
into the currently selected collection.
.Ar doc
is parsed as MongoDB Extended JSON.
.It Ic aggregate Op Ar pipeline
Run an aggregation query using the given pipeline.
.It Ic cd Ar path
Change the currently selected database and collection to
.Ar path .
The database and collection name should be separated by a
.Qq / .
A path that starts with a leading
.Qq /
is treated as an absolute path and should always be followed by a database name.
.Pp
If
.Ar path
is
.Qq -
the previously selected path will be selected again.
If a path component is
.Qq ..
it's interpreted as a way to traverse up.
.Pp
If
.Qq / ,
.Qq -
or
.Qq ..
follow a collection name, these will be treated as part of that collection and won't have the special meaning described before.
.It Ic drop Op Ar path
drop a collection or database depending on
.Ar path
or the currently selected path.
.It Ic help
Print the list of commands.
.El
.Pp
Any command can be abbreviated to the shortest non-ambiguous form.
So
.Ar find
can also be written as
.Ar f
since no other command starts with an f.
.Pp
If selector is not a JSON document it is treated as a shortcut to search on _id of type string.
Hexadecimal strings of 24 characters are treated as object ids.
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
List all databases non-interactively:
.Bd -literal -offset 4n
$ echo f | mongovi
.Ed
.Pp
Open database
.Qq foo
and collection
.Qq bar :
.Bd -literal -offset 4n
$ mongovi /foo/bar
/foo/bar>
.Ed
.Pp
Change the currently selected collection to
.Qq sabar :
.Bd -literal -offset 4n
/foo/bar> cd ../sabar
/foo/sabar>
.Ed
.Pp
List documents where
.Qq foo
is
.Qq bar :
.Bd -literal -offset 4n
/foo/bar> f { foo: "bar" }
.Ed
.Pp
Quick search on Object ID:
.Bd -literal -offset 4n
/foo/bar> f 57c6fb00495b576b10996f64
.Ed
.Pp
Use an aggregation query to filter on documents where
.Qq foo
is
.Qq bar .
Note that
.Ar aggregate
is abbreviated to
.Ar a :
.Bd -literal -offset 4n
/foo/bar> a [{ $project: { foo: true } }, { $match: { foo: "bar" } }]
.Ed
.Pp
Copy one collection to another:
.Bd -literal -offset 4n
$ echo f | mongovi /foo/bar | mongovi -i /qux/baz
.Ed
.Sh SEE ALSO
.Xr editrc 5 ,
.Xr editline 7
.Sh AUTHORS
.An -nosplit
.An Tim Kuijsten
